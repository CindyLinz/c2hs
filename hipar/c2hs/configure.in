dnl C->Haskell Binding Compiler
dnl Copyright (c) [1999..2001] Manuel M. T. Chakravarty <chak@cse.unsw.edu.au>
dnl 
dnl This library is free software; you can redistribute it and/or
dnl modify it under the terms of the GNU Library General Public
dnl License as published by the Free Software Foundation; either
dnl version 2 of the License, or (at your option) any later version.
dnl 
dnl This library is distributed in the hope that it will be useful,
dnl but WITHOUT ANY WARRANTY; without even the implied warranty of
dnl MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
dnl Library General Public License for more details.
dnl 
dnl You should have received a copy of the GNU Library General Public
dnl License along with this library (COPYING.LIB); if not, write to the Free
dnl Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, 
dnl MA  02111-1307  USA

dnl ######################################################################
dnl Process this file with autoconf to produce a configure script.
dnl ######################################################################


dnl Initialise.
AC_INIT(toplevel/Version.hs)

dnl Select a specific Haskell compiler and/or flags.
AC_ARG_WITH(hc, 
            [  --with-hc=HC            use Haskell compiler HC (full path required)],
	    [HC=$withval])
AC_ARG_WITH(hcflags, 
            [  --with-hcflags=HCFLAGS  specify flags for Haskell compiler],
	    [HCFLAGS=$withval])

dnl Link with electric fence?
AC_ARG_WITH(efence, 
	    [  --with-efence           link with efence malloc debugger],
	    [efence=$withval])

dnl Check for OS and set dynamic library suffix.
DLSUFFIX=".so"
AC_CYGWIN
if test -n "$CYGWIN"; then
  DLSUFFIX=".dll"
fi

dnl Checks for programs.
AC_PROG_CC
AC_PROG_CPP
AC_PATH_PROG(BASENAME,basename)
AC_PATH_PROG(EXPR,expr)
AC_PATH_PROG(GREP,grep)
AC_PATH_PROG(HEAD,head)
AC_PATH_PROG(SED,sed)

dnl This is far from elegant, but works for extracting the plain version number
C2HS_VERSION=`$GREP '^versnum' toplevel/Version.hs\
	      | $SED '-e s/versnum.* "//' '-e s/"//'`

dnl Haskell compiler; currently only GHC 4.06 upwards and nhc98 1.0 have the 
dnl required FFI and existentially quantified variables correctly working.
dnl (The next command is not executed, if $HC is already set.)
AC_PATH_PROGS(HC, ghc nhc98)
if test -z "$HC"; then
 AC_MSG_ERROR([Could not find a Haskell compiler!
Currently supported are ghc 4.06 upwards & nhc98 1.0.
** Check \"http://haskell.org\". **])
fi
dnl The following can happen if a wrong --with-hc=HC option is given.
if test ! -x "$HC"; then
 AC_MSG_ERROR([File not found: $HC])
fi

dnl Determine basic compiler name.
case `$BASENAME $HC` in
  ghc*) hc_base=ghc;;
  nhc98) hc_base=nhc98;;
esac

dnl Check ghc's details.
if test $hc_base = ghc; then
  CTK_GHC_VERSION(hc_maj_vers,hc_min_vers)
  if test $hc_maj_vers -eq 4; then
    if test $hc_min_vers -lt 8; then
      AC_MSG_ERROR([You need version 4.08 upwards of ghc!
  ** Check \"http://haskell.org/ghc/\". **])
    fi
  elif test $hc_maj_vers -lt 4; then
    AC_MSG_ERROR([You need version 4.08 upwards of ghc!
  ** Check \"http://haskell.org/ghc/\". **])
  fi
  dnl Determine compilation system identifier.
  SYS=ghc$hc_maj_vers
fi

dnl Check nhc98's details.
if test $hc_base = nhc98; then
  AC_CACHE_CHECK([nhc98 version], ctk_cv_prog_nhc98_version, [
    ctk_cv_prog_nhc98_version=`$HC --version 2>&1 | $HEAD -n 1 | $SED -e 's/.*v\([[0-9]]\)\.\([[0-9]]*\).*/\1.\2/'`
  ])
  hc_maj_vers=`echo $ctk_cv_prog_nhc98_version | $SED -e 's/\([[0-9]]\)\.[[0-9]]*/\1/'`
  hc_min_vers=`echo $ctk_cv_prog_nhc98_version | $SED -e 's/[[0-9]]\.\([[0-9]]\)*/\1/'`
  if test $hc_maj_vers -lt 1 -o $hc_min_vers -lt 0; then
   AC_MSG_ERROR([You need version 1.0 upwards of nhc98!
  ** Check \"http://haskell.org/\". **])
  fi
  dnl Determine compilation system identifier.
  SYS=nhc$hc_maj_vers
fi

dnl Extra flags for the Haskell compiler that are c2hs-specific.
dnl
dnl * Do not optimise lib/ with one of the buggy ghcs (4.03 - 4.06).
dnl
AC_MSG_CHECKING([for buggy readXXXOffAddr])
if test $hc_maj_vers = 4 -a $hc_min_vers -ge 3 -a $hc_min_vers -le 6 ; then
  LIB_HCFLAGS=-Onot
  AC_MSG_RESULT([yes (optimisation switched off in lib/)])
else
  AC_MSG_RESULT([no])
fi

dnl Determine whether we need Legacy FFI support.
dnl
dnl In case of Legacy FFI support, we need to determine the errno constants for 
dnl the OS (needed by `CError').
dnl
LEGACY_FFI=no
if test $hc_base = ghc; then
  if test $hc_maj_vers -eq 4 -o $hc_min_vers -eq 8; then
    LEGACY_FFI=yes
  fi
elif test $hc_base = nhc98; then
  LEGACY_FFI=yes
fi
dnl
if test $LEGACY_FFI = yes; then
  BEGIN_LEGACY_FFI=
  END_LEGACY_FFI=
  BEGIN_NEW_FFI="{- for systems supporting the New FFI"
  END_NEW_FFI="-}"
else
  BEGIN_LEGACY_FFI="{- for systems including the Legacy FFI"
  END_LEGACY_FFI="-}"
  BEGIN_NEW_FFI=
  END_NEW_FFI=
fi
dnl
if test $LEGACY_FFI = yes; then
  C2HS_CHECK_CCONSTS(E2BIG EACCES EADDRINUSE EADDRNOTAVAIL EADV EAFNOSUPPORT EAGAIN EALREADY EBADF EBADMSG EBADRPC EBUSY ECHILD ECOMM ECONNABORTED ECONNREFUSED ECONNRESET EDEADLK EDESTADDRREQ EDIRTY EDOM EDQUOT EEXIST EFAULT EFBIG EFTYPE EHOSTDOWN EHOSTUNREACH EIDRM EILSEQ EINPROGRESS EINTR EINVAL EIO EISCONN EISDIR ELOOP EMFILE EMLINK EMSGSIZE EMULTIHOP ENAMETOOLONG ENETDOWN ENETRESET ENETUNREACH ENFILE ENOBUFS ENODATA ENODEV ENOENT ENOEXEC ENOLCK ENOLINK ENOMEM ENOMSG ENONET ENOPROTOOPT ENOSPC ENOSR ENOSTR ENOSYS ENOTBLK ENOTCONN ENOTDIR ENOTEMPTY ENOTSOCK ENOTTY ENXIO EOPNOTSUPP EPERM EPFNOSUPPORT EPIPE EPROCLIM EPROCUNAVAIL EPROGMISMATCH EPROGUNAVAIL EPROTO EPROTONOSUPPORT EPROTOTYPE ERANGE EREMCHG EREMOTE EROFS ERPCMISMATCH ERREMOTE ESHUTDOWN ESOCKTNOSUPPORT ESPIPE ESRCH ESRMNT ESTALE ETIME ETIMEDOUT ETOOMANYREFS ETXTBSY EUSERS EWOULDBLOCK EXDEV)
  dnl
  dnl AC_SUBSTs can't be used in a loop as they are intepreted by autoconf.
  dnl
  AC_SUBST(CCONST_E2BIG)
  AC_SUBST(CCONST_EACCES)
  AC_SUBST(CCONST_EADDRINUSE)
  AC_SUBST(CCONST_EADDRNOTAVAIL)
  AC_SUBST(CCONST_EADV)
  AC_SUBST(CCONST_EAFNOSUPPORT)
  AC_SUBST(CCONST_EAGAIN)
  AC_SUBST(CCONST_EALREADY)
  AC_SUBST(CCONST_EBADF)
  AC_SUBST(CCONST_EBADMSG)
  AC_SUBST(CCONST_EBADRPC)
  AC_SUBST(CCONST_EBUSY)
  AC_SUBST(CCONST_ECHILD)
  AC_SUBST(CCONST_ECOMM)
  AC_SUBST(CCONST_ECONNABORTED)
  AC_SUBST(CCONST_ECONNREFUSED)
  AC_SUBST(CCONST_ECONNRESET)
  AC_SUBST(CCONST_EDEADLK)
  AC_SUBST(CCONST_EDESTADDRREQ)
  AC_SUBST(CCONST_EDIRTY)
  AC_SUBST(CCONST_EDOM)
  AC_SUBST(CCONST_EDQUOT)
  AC_SUBST(CCONST_EEXIST)
  AC_SUBST(CCONST_EFAULT)
  AC_SUBST(CCONST_EFBIG)
  AC_SUBST(CCONST_EFTYPE)
  AC_SUBST(CCONST_EHOSTDOWN)
  AC_SUBST(CCONST_EHOSTUNREACH)
  AC_SUBST(CCONST_EIDRM)
  AC_SUBST(CCONST_EILSEQ)
  AC_SUBST(CCONST_EINPROGRESS)
  AC_SUBST(CCONST_EINTR)
  AC_SUBST(CCONST_EINVAL)
  AC_SUBST(CCONST_EIO)
  AC_SUBST(CCONST_EISCONN)
  AC_SUBST(CCONST_EISDIR)
  AC_SUBST(CCONST_ELOOP)
  AC_SUBST(CCONST_EMFILE)
  AC_SUBST(CCONST_EMLINK)
  AC_SUBST(CCONST_EMSGSIZE)
  AC_SUBST(CCONST_EMULTIHOP)
  AC_SUBST(CCONST_ENAMETOOLONG)
  AC_SUBST(CCONST_ENETDOWN)
  AC_SUBST(CCONST_ENETRESET)
  AC_SUBST(CCONST_ENETUNREACH)
  AC_SUBST(CCONST_ENFILE)
  AC_SUBST(CCONST_ENOBUFS)
  AC_SUBST(CCONST_ENODATA)
  AC_SUBST(CCONST_ENODEV)
  AC_SUBST(CCONST_ENOENT)
  AC_SUBST(CCONST_ENOEXEC)
  AC_SUBST(CCONST_ENOLCK)
  AC_SUBST(CCONST_ENOLINK)
  AC_SUBST(CCONST_ENOMEM)
  AC_SUBST(CCONST_ENOMSG)
  AC_SUBST(CCONST_ENONET)
  AC_SUBST(CCONST_ENOPROTOOPT)
  AC_SUBST(CCONST_ENOSPC)
  AC_SUBST(CCONST_ENOSR)
  AC_SUBST(CCONST_ENOSTR)
  AC_SUBST(CCONST_ENOSYS)
  AC_SUBST(CCONST_ENOTBLK)
  AC_SUBST(CCONST_ENOTCONN)
  AC_SUBST(CCONST_ENOTDIR)
  AC_SUBST(CCONST_ENOTEMPTY)
  AC_SUBST(CCONST_ENOTSOCK)
  AC_SUBST(CCONST_ENOTTY)
  AC_SUBST(CCONST_ENXIO)
  AC_SUBST(CCONST_EOPNOTSUPP)
  AC_SUBST(CCONST_EPERM)
  AC_SUBST(CCONST_EPFNOSUPPORT)
  AC_SUBST(CCONST_EPIPE)
  AC_SUBST(CCONST_EPROCLIM)
  AC_SUBST(CCONST_EPROCUNAVAIL)
  AC_SUBST(CCONST_EPROGMISMATCH)
  AC_SUBST(CCONST_EPROGUNAVAIL)
  AC_SUBST(CCONST_EPROTO)
  AC_SUBST(CCONST_EPROTONOSUPPORT)
  AC_SUBST(CCONST_EPROTOTYPE)
  AC_SUBST(CCONST_ERANGE)
  AC_SUBST(CCONST_EREMCHG)
  AC_SUBST(CCONST_EREMOTE)
  AC_SUBST(CCONST_EROFS)
  AC_SUBST(CCONST_ERPCMISMATCH)
  AC_SUBST(CCONST_ERREMOTE)
  AC_SUBST(CCONST_ESHUTDOWN)
  AC_SUBST(CCONST_ESOCKTNOSUPPORT)
  AC_SUBST(CCONST_ESPIPE)
  AC_SUBST(CCONST_ESRCH)
  AC_SUBST(CCONST_ESRMNT)
  AC_SUBST(CCONST_ESTALE)
  AC_SUBST(CCONST_ETIME)
  AC_SUBST(CCONST_ETIMEDOUT)
  AC_SUBST(CCONST_ETOOMANYREFS)
  AC_SUBST(CCONST_ETXTBSY)
  AC_SUBST(CCONST_EUSERS)
  AC_SUBST(CCONST_EWOULDBLOCK)
  AC_SUBST(CCONST_EXDEV)
fi

dnl Checks for libraries.

dnl Needed substitutions.
AC_SUBST(DLSUFFIX)
AC_SUBST(C2HS_VERSION)
AC_SUBST(HCFLAGS)
AC_SUBST(LIB_HCFLAGS)
AC_SUBST(LEGACY_FFI)
AC_SUBST(BEGIN_LEGACY_FFI)
AC_SUBST(END_LEGACY_FFI)
AC_SUBST(BEGIN_NEW_FFI)
AC_SUBST(END_NEW_FFI)

dnl Write the results...
AC_OUTPUT([
  toplevel/C2HSConfig.hs
  lib/NewStorable.hs
  lib/CError.hs
  mk/config.mk
  c2hs-config
  c2hs.spec
], [chmod +x c2hs-config])
